ComedyBase = angular.module('ComedyBase', ['ngResource', 'rails', 'ui.bootstrap'])
filepicker.setKey('AffEtHmTETGO3pTJxeyo7z')

ComedyBase.factory "User", ["railsResourceFactory", (railsResourceFactory) ->
    railsResourceFactory
        url: "/api/users"
        name: "user"
]
ComedyBase.factory "Venue", ["railsResourceFactory", (railsResourceFactory) ->
    railsResourceFactory
        url: "/api/venues"
        name: "venue"
]

ComedyBase.factory "debounce", ($timeout, $q) ->
  (func, wait, immediate) ->
    timeout = undefined
    deferred = $q.defer()
    ->
      context = this
      args = arguments_
      later = ->
        timeout = null
        unless immediate
          deferred.resolve func.apply(context, args)
          deferred = $q.defer()

      callNow = immediate and not timeout
      $timeout.cancel timeout  if timeout
      timeout = $timeout(later, wait)
      if callNow
        deferred.resolve func.apply(context, args)
        deferred = $q.defer()
      deferred.promise


ComedyBase.controller "VenuesCtrl", ["$scope", "$http", "Venue", "$routeParams", "$location", "debounce", ($scope, $http, Venue, $routeParams, $location, debounce) ->



    $scope.debouncedSearch = -> debounce($scope.search, 3000, false)

    $scope.search = ->
      venues = Venue.query(query:$scope.query).then( (venues) ->
        $scope.venues = venues
      )

    $scope.isActive = (route) ->
        route is $location.path()
    ]


ComedyBase.controller "ComedyBaseCtrl", ["$scope", "$http", "$resource", "$routeParams", "$location", ($scope, $http, $resource, $routeParams, $location) ->

  users = User.query().then( (users) ->
    $scope.users = users
  )

  $scope.isActive = (route) ->
    route is $location.path()
  ]

ComedyBase.controller "ComedyBaseUserCtrl", ["$scope", "$http", "User", "$routeParams", "$location", ($scope, $http, User, $routeParams, $location) ->
  $scope.slug = $routeParams.slug
  User.get(id: $scope.slug).then( (user) ->
    $scope.user = user
    window.u = user
  )
  ]

ComedyBase.controller "TypeaheadCtrl", ["$scope", "$http", "$resource", "$routeParams", "$location", ($scope, $http, $resource, $routeParams, $location) ->
    $scope.selected = undefined
    $scope.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming']
]

ComedyBase.controller "ComedyBaseProfileCtrl", ["$scope", "$http", "$resource", "$routeParams", "$location", "User", ($scope, $http, $resource, $routeParams, $location, User) ->
    $scope.slug = $routeParams.slug

    $scope.setCurrentEvent = (event) ->
        $scope.current_event = event
    $scope.updateEvent = ->
        delete $scope.current_event
    $scope.removeCurrentEvnet = ->
        delete $scope.current_event
    $scope.saveForm = ->
        $scope.user.update()
    User.get(id: current_user.id).then (result) ->
      $scope.user = result
    $scope.pickFile = =>
        filepicker.pick
            mimetypes: ["image/*", "text/plain"]
            services: ["COMPUTER", "FACEBOOK", "GMAIL"]
        , ((FPFile) ->
            $scope.user.cover_image_url = FPFile.url
            $scope.$apply()

        ), (FPError) ->
            alert "error"
            console.log FPError.toString()
  ]





ComedyBase.config ["$locationProvider", "$routeProvider", ($locationProvider, $routeProvider) ->
    $locationProvider.html5Mode(true)
    $routeProvider.when("/",
        templateUrl: "<%= asset_path 'angular/partials/home.tpl.html' %>"
        controller: "ComedyBaseCtrl"
    ).when("/#_=_",
        templateUrl: "<%= asset_path 'angular/partials/home.tpl.html' %>"
        controller: "ComedyBaseCtrl"
    ).when("/about",
        templateUrl: "<%= asset_path 'angular/partials/about.tpl.html' %>"
    ).when("/type",
        templateUrl: "<%= asset_path 'angular/partials/events/choose_event.tpl.html' %>"
        controller: "TypeaheadCtrl"
    ).when("/profile",
        templateUrl: "<%= asset_path 'angular/partials/edit_profile.tpl.html' %>"
        controller: "ComedyBaseProfileCtrl"
    ).when("/venues",
        templateUrl: "<%= asset_path 'angular/partials/venues/list.tpl.html' %>"
        controller: "VenuesCtrl"
    ).when("/me/events",
        templateUrl: "<%= asset_path 'angular/partials/events/edit_events.tpl.html' %>"
        controller: "ComedyBaseProfileCtrl"
    ).when("/events/add",
        templateUrl: "<%= asset_path 'angular/partials/events/choose_event.tpl.html' %>"
        controller: "ComedyBaseProfileCtrl"
    ).when("/:slug",
        templateUrl: "<%= asset_path 'angular/partials/profile.tpl.html' %>"
        controller: "ComedyBaseUserCtrl"
    ).otherwise redirectTo: "/"
  ]
